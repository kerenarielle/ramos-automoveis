@charset 'UTF-8';

/// Retorna o tamanho correspondente à chave especificada no mapa `$space`
///
/// @group   Tools
/// @require {variable} $spaces
///
/// @return  {number} - Tamanho atribuido no mapa
///
/// @param   {string} [base] $size - Tamanho do espaço desejado, de acordo com o mapa $spaces
///
/// @example scss - Uso
///   .element1 {
///     margin-right: space(m);
///   }
///
///   .element2 {
///     margin-right: space(m, p);
///   }
///
/// @example scss - Compilado
///   .element1 {
///     margin-right: 24px;
///   }
///
/// @example scss - Compilado
///   .element2 {
///     margin-right: 24px 8px;
///   }

@function space($sizes...) {
  $size-list: ();

  @each $size in $sizes {
    @if map-has-key($spaces, $size) {
      $size-list: append($size-list, get-maps($spaces, $size));
    } @else {
      $size-list: append($size-list, $size);
    }
  }

  @if length($sizes) == 1 {
    @return nth($size-list, 1);
  }

  @return $size-list;
}